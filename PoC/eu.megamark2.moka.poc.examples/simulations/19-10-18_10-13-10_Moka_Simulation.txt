19/10/18 10:16:50 CS_ReadSelfActionActivation [ name = this, Inputs : [ ], Outputs : [ ]]
19/10/18 10:16:50 CS_ReadSelfActionActivation [ name = this, Inputs : [ ], Outputs : [ ]]
19/10/18 10:16:50 CS_CreateObjectActionActivation [ name = CreateAccount, Inputs : [ ], Outputs : [ ]]
19/10/18 10:16:50 Value Specification { name = user Outputs : [ value : type : Integer, value : 203336]}
19/10/18 10:16:50 CS_AddStructuralFeatureValueActionActivation [ name = setUserName, Inputs : [ { name : object, { object type : Account, value : [{ username}, { passwd}]}}, { name : valueU, type : Integer, value : 203336} ], Outputs : [ ]]
19/10/18 10:16:50 Value Specification { name = passwd Outputs : [ value : type : Integer, value : 123456]}
19/10/18 10:16:50 CS_AddStructuralFeatureValueActionActivation [ name = setPasswd, Inputs : [ { name : object, { object type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd}]}}, { name : valueP, type : Integer, value : 123456} ], Outputs : [ ]]
19/10/18 10:16:51 CallBehaviorActionActivation [ name = registerAccount, behavior = registerAccountBehavior, Inputs : [ { name : engine, { engine type : AuthenticationEngine, value : [{ registeredAccount}]}}, { name : account, { account type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd, type : Integer, value : 123456 }]}} ]]
19/10/18 10:16:51 StructuredActivityNodeActivation [ name = Body, Inputs : [ ], Outputs : [ ]]
19/10/18 10:16:51 StructuredActivityNodeActivation [ name = 1:Expression Statement, Inputs : [ ], Outputs : [ ]]
19/10/18 10:16:51 StructuredActivityNodeActivation [ name = WriteAll(Authentication::AuthenticationEngine::registeredAccount), Inputs : [ { name : WriteAll(Authentication::AuthenticationEngine::registeredAccount).input, { WriteAll(Authentication::AuthenticationEngine::registeredAccount).input type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd, type : Integer, value : 123456 }]}} ], Outputs : [ ]]
19/10/18 10:16:51 StructuredActivityNodeActivation [ name = RighthandSide('Fork('account')'), Inputs : [ ], Outputs : [ ]]
19/10/18 10:16:51 CS_ClearStructuralFeatureValueActionActivation [ name = Clear('registeredAccount'), Inputs : [ { name : Clear('registeredAccount').object, { Clear('registeredAccount').object type : AuthenticationEngine, value : [{ registeredAccount}]}} ], Outputs : [ ]]
19/10/18 10:16:51 CS_AddStructuralFeatureValueActionActivation [ name = Write('registeredAccount'), Inputs : [ { name : Write('registeredAccount').object, { Write('registeredAccount').object type : AuthenticationEngine, value : [{ registeredAccount}]}}, { name : Write('registeredAccount').value, { Write('registeredAccount').value type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd, type : Integer, value : 123456 }]}} ], Outputs : [ ]]
19/10/18 10:16:52 CallBehaviorActionActivation [ name = registerAccount, behavior = registerAccountBehavior, Outputs : [ ]]
19/10/18 10:16:52 CallBehaviorActionActivation [ name = authenticateBehavior, behavior = authenticateBehavior, Inputs : [ { name : engine, { engine type : AuthenticationEngine, value : [{ registeredAccount, value : null }]}}, { name : account, { account type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd, type : Integer, value : 123456 }]}} ]]
19/10/18 10:16:52 StructuredActivityNodeActivation [ name = Body, Inputs : [ ], Outputs : [ ]]
19/10/18 10:16:52 StructuredActivityNodeActivation [ name = 1:ReturnStatement, Inputs : [ ], Outputs : [ ]]
19/10/18 10:16:52 ReadStructuralFeatureActionActivation [ name = Read('username'), Inputs : [ { name : Read('username').object, { Read('username').object type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd, type : Integer, value : 123456 }]}} ], Outputs : [ ]]
19/10/18 10:16:52 ReadStructuralFeatureActionActivation [ name = Read('registeredAccount'), Inputs : [ { name : Read('registeredAccount').object, { Read('registeredAccount').object type : AuthenticationEngine, value : [{ registeredAccount, value : null }]}} ], Outputs : [ ]]
19/10/18 10:16:52 ReadStructuralFeatureActionActivation [ name = Read('username'), Inputs : [ { name : Read('username').object, { Read('username').object type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd, type : Integer, value : 123456 }]}} ], Outputs : [ ]]
19/10/18 10:16:52 TestIdentityActionActivation [ name = Test(==), Inputs : [ { name : Test(==).first, type : Integer, value : 203336}, { name : Test(==).second, type : Integer, value : 203336} ], Outputs : [ ]]
19/10/18 10:16:52 ReadStructuralFeatureActionActivation [ name = Read('registeredAccount'), Inputs : [ { name : Read('registeredAccount').object, { Read('registeredAccount').object type : AuthenticationEngine, value : [{ registeredAccount, value : null }]}} ], Outputs : [ ]]
19/10/18 10:16:52 ReadStructuralFeatureActionActivation [ name = Read('passwd'), Inputs : [ { name : Read('passwd').object, { Read('passwd').object type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd, type : Integer, value : 123456 }]}} ], Outputs : [ ]]
19/10/18 10:16:52 ReadStructuralFeatureActionActivation [ name = Read('passwd'), Inputs : [ { name : Read('passwd').object, { Read('passwd').object type : Account, value : [{ username, type : Integer, value : 203336 }, { passwd, type : Integer, value : 123456 }]}} ], Outputs : [ ]]
19/10/18 10:16:52 TestIdentityActionActivation [ name = Test(==), Inputs : [ { name : Test(==).first, type : Integer, value : 123456}, { name : Test(==).second, type : Integer, value : 123456} ], Outputs : [ ]]
19/10/18 10:16:52 CallBehaviorActionActivation [ name = Call('And'), behavior = And, Inputs : [ { name : Call('And').argument('x'), type : Boolean, value : true}, { name : Call('And').argument('y'), type : Boolean, value : true} ]]
19/10/18 10:16:52 CallBehaviorActionActivation [ name = Call('And'), behavior = And, Outputs : [ type : Boolean, value : true ]]
19/10/18 10:16:52 CallBehaviorActionActivation [ name = authenticateBehavior, behavior = authenticateBehavior, Outputs : [ type : Boolean, value : true ]]
